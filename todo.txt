Stats:
- the stats don't seem to be OK (Specified Bandwidth vs. sending/receiving BW; Layer 1vs2/3/4). Check this
- pps for each thread
- WAN extrapolation
- Packet loss in %

Whishlist
- Use QHostInfo to do a DNS-Lookup on destinationHost
- dynamic port numbers per flow (would be easier for the user, only the expert needs to set the udp port?
- Pause one of the UdpEcho
- Change Parameters of flows while sending (disable port change)
- Update Status of UdpEcho when Sending / Paused
- Resolve Hostname when tipping, and show IP that will be used
- disconnect when quit
- Sending (and echo) must run in a separate thread
- Optimise sending algorithm.
- Why can't I go beyond 100 Mbit/s? Is there an overflow in the Udp stack?
    o it seems that the responder has to be optimised - currently based on signals
- Graph the results qith QCustomPlot ! // New QGraph
- Choose DSCP from List (EF...)
- Do not start Connection when no flow ist defined
- Do no start Connection when UDP-Port is the same on two flows
- Add latency as a statistic
- Display the messed system with a possibility to calculate how much Traffic is generated by encapsulations (Example: GRE Tunnel)
- When specifiing 100 Mbit/s L3-Bandwidth an 1400 Bytes (L3), whe get 100.0000000000001 L3 Bandwidth.
- No Packet Loss when receiving no Packets - add a timeout?
- Make Packet-sending intervall Tc customisable per UDP-Sender
- Adding / removing sending threads while generating traffic (now: delete = crash)
- Tune performance:
    - 60 Mbit/s (L2) with 64-Bytes-Frames and 0,1% loss => More Threads per Flow?
    - 1 Gbit(s (L1) with 1518-Bytes-Frames, 0% loss
    - 500 Mbit/s (L2) with 512-Bytes-Frames; 0% loss => More Threads per Flow?
    - I sometimes get a small amount of packet loss, but I'm not sure were there are from.
- Pretty coll would be an osciloscope - Send the same pattern repeatidly an look at the answer (how does the network reacts on burtsts?)
- IPv6-Support - very low priority, IPv4 is fine for Network testing.
- Give the Window a name, not "MainWindow" :-)

############## udpecho #############
- Filter on source IP Address
- Filter on destination IP Address (avoid to respond to broadcasts with a broadcast source IP)
