TODO:
- Sender thread - as CPU is not the problem, can we get ride of the chunks?
- Sender thread - begin with stats would produce stats before te next Tc refill
- Adding a thread - no receiving bandwidth
- Changing PDU Size changes the bandwidth

Whishlist:
- Stats jumps when thread restarts - pause stats for 2 seconds?
- Remember last settings (IP-Address, layer, flows) + save settings into a file
- Pause one of the UdpEcho
- Change every parameter of flows while sending
- "Ping" Saellite (udp echo port 7/UDP)
- Graph the results with QCustomPlot // New QGraph
- Choose DSCP from List (EF...)
- Add latency as a statistic
- Display the tested system with a possibility to calculate how much Traffic is generated by encapsulations (Example: GRE Tunnel)
   - WAN extrapolation
   - The encapsulations sould be customisable
- Make Packet-sending intervall Tc customisable per UDP-Sender
- Tune performance:
    - 60 Mbit/s (L2) with 64-Bytes-Frames and 0,1% loss => More Threads per Flow?
    - 1 Gbit(s (L1) with 1518-Bytes-Frames, 0% loss
    - 500 Mbit/s (L2) with 512-Bytes-Frames; 0% loss => More Threads per Flow?
    - I sometimes get a small amount of packet loss, but I'm not sure were there are from.
- Pretty cool would be an osciloscope - Send the same pattern repeatidly an look at the answer (how does the network reacts on bursts?)
- IPv6-Support - very low priority, IPv4 is fine for Network testing.
- Remember last 10 destinations

############## udpecho #############
TODO
- Filter on destination IP Address (avoid to respond to broadcasts with a broadcast source IP)
Whishlist
- Filter on source IP Address
