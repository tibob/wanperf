Multithreading:
- make wanperfd multithread
  current performance:
    # 100 Mbit/s at 64 Bytes Frames. (Tuned sysctl net.core.rmem_default / sysctl net.core.rmem_max)
    # 1 Gbit/s at 1500 Bytes Frames whitout tuning of linux, but 1 microsec sleep
      o alternative read an write for each packet.
      o I want to tune QAbstractSocket::ReceiveBufferSizeSocketOption and QAbstractSocket::SendBufferSizeSocketOption. Set it to 500000000 ? Be root :-(


Whishlist
- dynamic port numbers per flow (would be easier for the user, only the expert needs to set the udp port?
- Differentiate IPv4 from IPv6 when calculating the UDP-bandwidth to be send
- Pause one of the UdpEcho
- Change Parameters of flows while sending (disable port change)
- Update Status of UdpEcho when Sending / Paused
- Resolve Hostname when tipping, and show IP that will be used
- disconnect when quit
- Sending (and echo) must run in a separate thread
- Optimise sending algorithm.
- Handle TOS (Sending in wanperf)
- Why can't I go beyond 100 Mbit/s? Is there an overflow in the Udp stack?
    o it seems that the responder has to be optimised - currently based on signals
- Graph the results qith QCustomPlot ! // New QGraph
- Choose DSCP from List (EF...)
- Do not start Connection when no flow ist defined
- Do no start Connection when UDP-Port is the same on two flows
- Add latency as a statistic
- Display the messed system with a possibility to calculate how much Traffic is generated by encapsulations (Example: GRE Tunnel)

- DSCP
 o Have Qt change their code or inherit QUdpSocket
 o DSCP under Windows
